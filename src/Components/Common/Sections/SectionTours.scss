@import '../../../Sass/abstracts/variables';


.section-tours {
    background-color: $color-grey-light-1;
    padding: 25rem 0 50rem 0;
    margin-top: -12rem;
    
    // Functionalities
    .card {

        /* 
            The perspective property is used to give a 3D-positioned element some perspective.
            The perspective property defines how far the object is away from the user. So, a lower value will result in a more intensive 3D effect than a higher value.
            When defining the perspective property for an element, it is the CHILD elements that get the perspective view, NOT the element itself.     
        */
        perspective: 150rem;
        // working in firefox browser
        -moz-perspective: 150rem;
        // background-color: orangered;
        // height: 50rem;
        // transition: all .8s;
        position: relative;
        // position "absolute" below destroys height in card
        //  therefore we need to define same height over here.
        // It is like float that destroys height!!!
        height: 52rem;

        &__side {
            // background-color: orangered;
            // color: #ffffff;
            font-size: 4rem;
            height: 52rem;
            transition: all .8s ease;

            /* same postion as the front is */
            position: absolute;
            // it is same as the original place where position: relative above
            top: 0;
            left: 0;
            // make the height 100% as well
            width: 100%;

            /* 
                The backface-visibility property defines whether or not the back face of an element should be visible when facing the user.
                The back face of an element is a mirror image of the front face being displayed.
                This property is useful when an element is rotated. It lets you choose if the user should see the back face or not.
            */
            backface-visibility: hidden;

            border-radius: 3px;
            // background picture in "&__pcitre" will destroy the radius.
            // In order to prevent destroy, we need to define overflow!!!
            overflow: hidden;
            box-shadow: 0 1.5rem 4rem rgba($color-black, .15);

            // sudo is not used because it does not control the children
            &--front {
                background-color: $color-white;
            }

            // it is flipped already
            //  threfore, it is not displayed
            &--back {
                // background-color: green;
                transform: rotateY(180deg);
                
                &-1 {
                    background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
                }
            }

        }

            // Styling
        &__picture {
            background-size: cover;


            height: 23rem;
            // not working in IE / MS Edge
            // a lot of options:screen, soft-light and so on....
            background-blend-mode: screen;

            // cutting the picture
            -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
            clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

            &--1 {
                // It is a background. No contnets.
                // Therefore, we need to define "height" above

                // multiple background images.
                // z-index: 0 -> gradient
                // z-index:-1 -> image

                // picture will destroy 
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
                url(/img/nat-5.jpg);
            }

            &--2 {
                background-image: url(/img/nat-5.jpg);
            }

            &--3 {
                background-image: url(/img/nat-5.jpg);
            }
        }

        &__heading {
            font-size: 2.8rem;
            font-weight: 300;
            text-transform: uppercase;
            text-align: right;
            color: $color-white;
            // it is followed by position at the parent, "card"
            position: absolute;
            
            // Without the top/right below, it is displayed "z-index-1"
            // which means no space for this
            top: 12rem;
            right: 2rem;
            // to make span: inline two lines
            width: 65%;
        }

        // This is not a child of &__heading
        // It is a fully new element

        // card__heading-span card__heading-span--1
        &__heading-span {
            // To make two line partly overlapped
            // Remember it is a still inline element
            //  Therefore A of SEA and E of EXPLORER do not have any spare space
            padding: 1rem 1.5rem;
            // Make spare spaces like padding.
            -webkit-box-decoration-break: clone;
            box-decoration-break: clone;

            &--1 {
                
                background-image: linear-gradient(to right bottom, 
                rgba($color-secondary-light, .85), 
                rgba($color-secondary-dark, .85));
            }
        }

        &__details {
            
            padding: 3rem;

            ul {
                list-style: none;
                width: 80%;

                // Please remember over and over
                // To centeralize the block element of block
                //  use margin
                margin: 0 auto;
                // block element
                li {
                    text-align: center;
                    font-size: 1.5rem;
                    padding: 1rem;

                    &:not(:last-child) {
                        border-bottom: 1px solid $color-grey-light-2;
                        
                    }

                }

            }

        }
    }

    // when card rotates, card_side also rotates
    // close side--front
    .card:hover .card__side--front {
        // moving in other direction!
        transform: rotateY(-180deg);
    }
    // open side--back
    .card:hover .card__side--back {
        transform: rotateY(0deg);
    }

}