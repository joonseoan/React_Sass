@import '../abstracts/variables';
@import '../abstracts/mixins';

.row {

    // must use rem for responsive
    // max-width: when the space is engough, it will be '114red'
    //      but if the space is not enough, it will be adaptive.
    max-width: $color-width;
    // background-color: #eeeeee;
    // "auto" applies for "block" like <div> <section> and etc
    margin: 6rem auto;

    // 2)
    // apply margin-buttom above except for the last-child
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;        
    }
    
    @include clearfix;

    [class^="col-"] {
        // background-color: orangered;
        float: left;
        &:not(:last-child) {
            margin-right: $gutter-horizontal; 
        }
    }
    

    .col-1-of-2 {
        width: calc((100% - #{ $gutter-horizontal }) / 2);
    }

    // 1)
    // It is same as "&:not(:last-child)" above
    /* 
    // all child elements
    margin-bottom: $gutter-vertical;

    &:last-child {
        margin-bottom: 0px;
    } */

    

    //  [ IMPORTANT ]
    // grab the elements which have alt="logo" attributes
    // [alt="logo"] { }

    // grab the elements which have a class attribute
    // that starts value with "col-"
    // [class^="col-"] {}

    // grab the elements which have a class attribute
    // that ends value with "col-"
    // [class$="col-"] {}

    // grab the elements which have a class attribute
    // that includes value with "col-"
    // [class*="col-"] {}

    // [class^="col-"] {
    //     background-color: orangered;
    //     float: left;
    //     &:not(:last-child) {
    //         margin-right: $gutter-horizontal; 
    //     }
    // }

    // .col-1-of-2 {

    //     width: calc((100% - #{ $gutter-horizontal }) / 2);
    //     // use grabbing [] attribute above 
    //     // background-color: orangered;
        
    //     // // will generage 0px height
    //     // // In order to fix this, we need to use clearfix! 
    //     // float: left;

    //     // &:not(:last-child) {
    //     //     margin-right: $gutter-horizontal; 
    //     // }

    // }

    .col-1-of-3 {
        width: calc((100% - 2 * #{ $gutter-horizontal }) / 3);

        // use grabbing [] attribute above 
        // background-color: orangered;
        // float: left; 

        // &:not(:last-child) {
        //     margin-right: $gutter-horizontal;
        // }
        
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{ $gutter-horizontal }) / 3) + #{ $gutter-horizontal });

        // use grabbing [] attribute above 
        // background-color: orangered;
        // float: left; 

        // &:not(:last-child) {
        //     margin-right: $gutter-horizontal;
        // }
        
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{ $gutter-horizontal }) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{ $gutter-horizontal }) / 4) + #{ $gutter-horizontal });
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{ $gutter-horizontal }) / 4) + 2 * #{ $gutter-horizontal });
    }

}